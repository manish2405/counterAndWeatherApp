{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherService {\n  constructor(http) {\n    this.http = http;\n    this.apiKey = 'd4594364698122bfd1c4b3eb5f2ff19f'; // Replace with your actual API key\n    this.currentWeatherUrl = 'https://api.openweathermap.org/data/2.5/weather';\n    this.forecastUrl = 'https://api.openweathermap.org/data/2.5/onecall';\n  }\n  getCurrentWeather(city) {\n    const params = {\n      q: city,\n      appid: this.apiKey\n    };\n    return this.http.get(this.currentWeatherUrl, {\n      params\n    });\n  }\n  getWeatherForecast(lat, lon) {\n    const params = {\n      lat: lat.toString(),\n      lon: lon.toString(),\n      appid: this.apiKey,\n      exclude: 'current,minutely,hourly'\n    };\n    return this.http.get(this.forecastUrl, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function WeatherService_Factory(t) {\n    return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeatherService,\n    factory: WeatherService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAOzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALhB,WAAM,GAAG,kCAAkC,CAAC,CAAC;IAC7C,sBAAiB,GAAG,iDAAiD;IACrE,gBAAW,GAAG,iDAAiD;EAGhC;EAEvCC,iBAAiB,CAACC,IAAY;IAC5B,MAAMC,MAAM,GAAG;MACbC,CAAC,EAAEF,IAAI;MACPG,KAAK,EAAE,IAAI,CAACC;KACb;IAED,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACC,iBAAiB,EAAE;MAAEL;IAAM,CAAE,CAAC;EAC1D;EAEAM,kBAAkB,CAACC,GAAW,EAAEC,GAAW;IACzC,MAAMR,MAAM,GAAG;MACbO,GAAG,EAAEA,GAAG,CAACE,QAAQ,EAAE;MACnBD,GAAG,EAAEA,GAAG,CAACC,QAAQ,EAAE;MACnBP,KAAK,EAAE,IAAI,CAACC,MAAM;MAClBO,OAAO,EAAE;KACV;IAED,OAAO,IAAI,CAACb,IAAI,CAACO,GAAG,CAAC,IAAI,CAACO,WAAW,EAAE;MAAEX;IAAM,CAAE,CAAC;EACpD;EAAC;qBA3BUL,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAiB,SAAdjB,cAAc;IAAAkB,YAFb;EAAM","names":["WeatherService","constructor","http","getCurrentWeather","city","params","q","appid","apiKey","get","currentWeatherUrl","getWeatherForecast","lat","lon","toString","exclude","forecastUrl","factory","providedIn"],"sourceRoot":"","sources":["/home/manish/Documents/project/angular-task/src/app/services/weather/weather.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  private apiKey = 'd4594364698122bfd1c4b3eb5f2ff19f'; // Replace with your actual API key\n  private currentWeatherUrl = 'https://api.openweathermap.org/data/2.5/weather';\n  private forecastUrl = 'https://api.openweathermap.org/data/2.5/onecall';\n\n\n  constructor(private http: HttpClient) {}\n\n  getCurrentWeather(city: string): Observable<any> {\n    const params = {\n      q: city,\n      appid: this.apiKey,\n    };\n\n    return this.http.get(this.currentWeatherUrl, { params });\n  }\n\n  getWeatherForecast(lat: number, lon: number): Observable<any> {\n    const params = {\n      lat: lat.toString(),\n      lon: lon.toString(),\n      appid: this.apiKey,\n      exclude: 'current,minutely,hourly',\n    };\n\n    return this.http.get(this.forecastUrl, { params });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
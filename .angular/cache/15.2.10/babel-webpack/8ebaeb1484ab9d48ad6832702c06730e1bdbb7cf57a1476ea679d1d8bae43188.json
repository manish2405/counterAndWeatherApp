{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CounterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"span\");\n    i0.ɵɵtext(2, \"Count: \");\n    i0.ɵɵelementStart(3, \"span\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CounterComponent_div_5_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.incrementCounter(i_r2));\n    });\n    i0.ɵɵtext(6, \"Increment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CounterComponent_div_5_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.decrementCounter(i_r2));\n    });\n    i0.ɵɵtext(8, \"Decrement\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CounterComponent_div_5_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteCounter(i_r2));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const counter_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(counter_r1.count);\n  }\n}\nexport class CounterComponent {\n  constructor() {\n    this.counters = [];\n  }\n  addCounter() {\n    this.counters.push({\n      count: 0\n    });\n    this.updateCounterCount();\n  }\n  resetCounters() {\n    this.counters = [];\n    this.updateCounterCount();\n  }\n  incrementCounter(index) {\n    this.counters[index].count++;\n  }\n  decrementCounter(index) {\n    if (this.counters[index].count > 0) {\n      this.counters[index].count--;\n    }\n  }\n  deleteCounter(index) {\n    this.counters.splice(index, 1);\n    this.updateCounterCount();\n  }\n  updateCounterCount() {\n    // You can use this.counters.length to get the count of counter lines\n    // Update your Navbar count using this value\n    console.log('Number of counters:', this.counters.length);\n  }\n  static #_ = this.ɵfac = function CounterComponent_Factory(t) {\n    return new (t || CounterComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CounterComponent,\n    selectors: [[\"app-counter\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"primary-color\", \"cursor-pointer\", \"p-5\", 3, \"click\"], [\"class\", \"counter-line\", 4, \"ngFor\", \"ngForOf\"], [1, \"counter-line\"], [1, \"blue-bg\", \"p-5\", \"radius-5\"], [1, \"cursor-pointer\", \"p-5\", 3, \"click\"], [1, \"cursor-pointer\", \"p-5\", \"bg-red\", 3, \"click\"]],\n    template: function CounterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_1_listener() {\n          return ctx.addCounter();\n        });\n        i0.ɵɵtext(2, \"Add Counter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_3_listener() {\n          return ctx.resetCounters();\n        });\n        i0.ɵɵtext(4, \"Reset Counters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, CounterComponent_div_5_Template, 11, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.counters);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"[_nghost-%COMP%] {\\n  margin: 1rem;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin: 1rem;\\n  padding: 0.3rem;\\n  border-radius: 5px;\\n  outline: none;\\n  border: 1px solid black;\\n}\\n\\n.counter-line[_ngcontent-%COMP%] {\\n  margin: 10px;\\n  padding: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY291bnRlci9jb3VudGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQUNGOztBQUNBO0VBQ0UsWUFBQTtFQUNBLFlBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xuICBtYXJnaW46IDFyZW07XG59XG5cbmJ1dHRvbntcbiAgbWFyZ2luOiAxcmVtO1xuICBwYWRkaW5nOiAwLjNyZW07XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG59XG4uY291bnRlci1saW5lIHtcbiAgbWFyZ2luOiAxMHB4O1xuICBwYWRkaW5nOiA1cHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;IAGEA,8BAA0E;IAClEA,uBAAO;IAAAA,+BAAmC;IAAAA,YAAmB;IAAAA,iBAAO;IAC1EA,iCAAiE;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,yBAAS;IAAAA,iBAAS;IACnFA,iCAAiE;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,yBAAS;IAAAA,iBAAS;IACnFA,iCAAqE;IAA3BA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAHpCA,eAAmB;IAAnBA,sCAAmB;;;ACGvE,OAAM,MAAOC,gBAAgB;EAL7BC;IAOE,aAAQ,GAAwB,EAAE;;EAElCC,UAAU;IACR,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAC,CAAE,CAAC;IAChC,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,aAAa;IACX,IAAI,CAACJ,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACG,kBAAkB,EAAE;EAC3B;EAEAE,gBAAgB,CAACC,KAAa;IAC5B,IAAI,CAACN,QAAQ,CAACM,KAAK,CAAC,CAACJ,KAAK,EAAE;EAC9B;EAEAK,gBAAgB,CAACD,KAAa;IAC5B,IAAI,IAAI,CAACN,QAAQ,CAACM,KAAK,CAAC,CAACJ,KAAK,GAAG,CAAC,EAAE;MAClC,IAAI,CAACF,QAAQ,CAACM,KAAK,CAAC,CAACJ,KAAK,EAAE;;EAEhC;EAEAM,aAAa,CAACF,KAAa;IACzB,IAAI,CAACN,QAAQ,CAACS,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAC9B,IAAI,CAACH,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkB;IAChB;IACA;IACAO,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACX,QAAQ,CAACY,MAAM,CAAC;EAC1D;EAAC;qBAjCUf,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDP7BrB,2BAAK;QAC8CA;UAAA,OAASsB,gBAAY;QAAA,EAAC;QAACtB,2BAAW;QAAAA,iBAAS;QAC5FA,iCAA2E;QAA1BA;UAAA,OAASsB,mBAAe;QAAA,EAAC;QAACtB,8BAAc;QAAAA,iBAAS;QAClGA,kEAKM;QACRA,iBAAM;;;QANqBA,eAAa;QAAbA,sCAAa","names":["i0","CounterComponent","constructor","addCounter","counters","push","count","updateCounterCount","resetCounters","incrementCounter","index","decrementCounter","deleteCounter","splice","console","log","length","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/manish/Documents/project/angular-task/src/app/counter/counter.component.html","/home/manish/Documents/project/angular-task/src/app/counter/counter.component.ts"],"sourcesContent":["<div>\n  <button class=\"primary-color cursor-pointer p-5\" (click)=\"addCounter()\">Add Counter</button>\n  <button class=\"primary-color cursor-pointer p-5\" (click)=\"resetCounters()\">Reset Counters</button>\n  <div *ngFor=\"let counter of counters; let i = index\" class=\"counter-line\">\n    <span>Count: <span class=\"blue-bg p-5 radius-5\">{{ counter.count }}</span></span>\n    <button class=\"cursor-pointer p-5\" (click)=\"incrementCounter(i)\">Increment</button>\n    <button class=\"cursor-pointer p-5\" (click)=\"decrementCounter(i)\">Decrement</button>\n    <button class=\"cursor-pointer p-5 bg-red\" (click)=\"deleteCounter(i)\">Delete</button>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss']\n})\nexport class CounterComponent {\n\n  counters: { count: number }[] = [];\n\n  addCounter() {\n    this.counters.push({ count: 0 });\n    this.updateCounterCount();\n  }\n\n  resetCounters() {\n    this.counters = [];\n    this.updateCounterCount();\n  }\n\n  incrementCounter(index: number) {\n    this.counters[index].count++;\n  }\n\n  decrementCounter(index: number) {\n    if (this.counters[index].count > 0) {\n      this.counters[index].count--;\n    }\n  }\n\n  deleteCounter(index: number) {\n    this.counters.splice(index, 1);\n    this.updateCounterCount();\n  }\n\n  updateCounterCount() {\n    // You can use this.counters.length to get the count of counter lines\n    // Update your Navbar count using this value\n    console.log('Number of counters:', this.counters.length);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}